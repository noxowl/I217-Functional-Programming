open NAT .
    op ext-fib : Nat -> Nat .
    op if_then {_} else {_} : Bool Nat Nat -> Nat .
    op ext-fib-sub : Nat -> NzNat .
    vars X N1 N2 : Nat .
    vars NzX : NzNat .

    eq if true then {N1} else {N2} = N1 .
    eq if false then {N1} else {N2} = N2 .
    
    eq ext-fib(X) = if (X quo 3 == 0) then {X} else {ext-fib-sub(X)} .
    eq ext-fib-sub(NzX) = ext-fib(p NzX) + ext-fib(p p NzX) + ext-fib(p p p NzX) .
    --
    red ext-fib(0) .
    -- reduce in %NAT : (ext-fib(0)):Nat
    -- (0):Zero
    -- (0.0000 sec for parse, 0.0000 sec for 4 rewrites + 4 matches)

    red ext-fib(1) .
    -- reduce in %NAT : (ext-fib(1)):Nat
    -- (1):NzNat
    -- (0.0000 sec for parse, 0.0000 sec for 4 rewrites + 4 matches)

    red ext-fib(2) .
    -- reduce in %NAT : (ext-fib(2)):Nat
    -- (2):NzNat
    -- (0.0000 sec for parse, 0.0000 sec for 4 rewrites + 4 matches)

    red ext-fib(3) .
    -- reduce in %NAT : (ext-fib(3)):Nat
    -- (3):NzNat
    -- (0.0000 sec for parse, 0.0001 sec for 25 rewrites + 26 matches)

    red ext-fib(5) .
    -- reduce in %NAT : (ext-fib(5)):Nat
    -- (11):NzNat
    -- (0.0000 sec for parse, 0.0001 sec for 88 rewrites + 92 matches)

    red ext-fib(7) .
    -- reduce in %NAT : (ext-fib(7)):Nat
    -- (37):NzNat
    -- (0.0000 sec for parse, 0.0005 sec for 319 rewrites + 334 matches)
close
